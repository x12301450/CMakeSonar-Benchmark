//////////////////////////////////////////////////////////
//   This class has been generated by TFile::MakeProject
//     (Tue Jun 14 15:33:00 2011 by ROOT version 5.31/01)
//      from the StreamerInfo in file http://root.cern.ch/files/atlasFlushed.root
//////////////////////////////////////////////////////////


#ifndef Trk__SegmentCollection_tlp1_h
#define Trk__SegmentCollection_tlp1_h
namespace Trk {
class SegmentCollection_tlp1;
} // end of namespace.

#include "TPCnvTokenList_p1.h"
#include "Riostream.h"
#include <vector>
#include "Trk__SegmentCollection_p1.h"
#include "Trk__Segment_p1.h"
#include "Trk__TrackSegment_p1.h"
#include "Trk__BoundSurface_p1.h"
#include "Trk__Surface_p1.h"
#include "Trk__CylinderBounds_p1.h"
#include "Trk__DiamondBounds_p1.h"
#include "Trk__DiscBounds_p1.h"
#include "Trk__RectangleBounds_p1.h"
#include "Trk__TrapezoidBounds_p1.h"
#include "Trk__RotatedTrapezoidBounds_p1.h"
#include "Trk__FitQuality_p1.h"
#include "Trk__LocalParameters_p1.h"
#include "Trk__HepSymMatrix_p1.h"
#include "Trk__RIO_OnTrack_p1.h"
#include "Trk__PseudoMeasurementOnTrack_p1.h"
#include "Trk__CompetingRIOsOnTrack_p1.h"
#include "Trk__DetElementSurface_p1.h"

namespace Trk {
class SegmentCollection_tlp1 {

public:
// Nested classes declaration.

public:
// Data Members.
   TPCnvTokenList_p1 m_tokenList;    //
   vector<Trk::SegmentCollection_p1> m_segmentCollections;    //(Trk::SegmentCollection_p1)
   vector<Trk::Segment_p1>           m_segments;              //(Trk::Segment_p1)
   vector<Trk::TrackSegment_p1>      m_tracksegments;         //(Trk::TrackSegment_p1)
   vector<Trk::BoundSurface_p1>      m_boundSurfaces;         //(Trk::BoundSurface_p1)
   vector<Trk::Surface_p1>           m_surfaces;              //(Trk::Surface_p1)
   vector<Trk::CylinderBounds_p1>    m_cylinderBounds;        //(Trk::CylinderBounds_p1)
   vector<Trk::DiamondBounds_p1>     m_diamondBounds;         //(Trk::DiamondBounds_p1)
   vector<Trk::DiscBounds_p1>        m_discBounds;            //(Trk::DiscBounds_p1)
   vector<Trk::RectangleBounds_p1>   m_rectangleBounds;       //(Trk::RectangleBounds_p1)
   vector<Trk::TrapezoidBounds_p1>   m_trapesoidBounds;       //(Trk::TrapezoidBounds_p1)
   vector<Trk::RotatedTrapezoidBounds_p1> m_rotatedTrapesoidBounds;    //(Trk::RotatedTrapezoidBounds_p1)
   vector<Trk::FitQuality_p1>             m_fitQualities;              //(Trk::FitQuality_p1)
   vector<Trk::LocalParameters_p1>        m_localParameters;           //(Trk::LocalParameters_p1)
   vector<Trk::HepSymMatrix_p1>           m_hepSymMatrices;            //(Trk::HepSymMatrix_p1)
   vector<Trk::RIO_OnTrack_p1>            m_RIO_OnTrack;               //(Trk::RIO_OnTrack_p1)
   vector<Trk::PseudoMeasurementOnTrack_p1> m_pseudoMeasurementOnTrack;    //(Trk::PseudoMeasurementOnTrack_p1)
   vector<Trk::CompetingRIOsOnTrack_p1>     m_competingRotsOnTrack;        //(Trk::CompetingRIOsOnTrack_p1)
   vector<Trk::DetElementSurface_p1>        m_detElementSurfaces;          //(Trk::DetElementSurface_p1)

   SegmentCollection_tlp1();
   SegmentCollection_tlp1(const SegmentCollection_tlp1 & );
   virtual ~SegmentCollection_tlp1();

};
} // namespace
#endif
