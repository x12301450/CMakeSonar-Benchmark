image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/viaduck/ci

stages:
    - build         # contains build and test and deploy

variables:
    OPENSSL_BUILD_VERSION: "3.3.4"
    OPENSSL_BUILD_HASH: "8d1a5fc323d3fd351dc05458457fd48f78652d2a498e1d70ffea07b4d0eb3fa8"
    PREBUILT_AUTH: "$PREBUILT_USER:$PREBUILT_PASSWORD"
    ANDROID_PLATFORM: "android-23"
 
linux-x86_64:
    script:
        - mkdir build-linux-x86_64
        - useradd -m -d /home/jdoe jdoe                               # OpenSSL tests must be run as unprivileged user
        - cd build-linux-x86_64
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BUILD_VERSION=$OPENSSL_BUILD_VERSION -DOPENSSL_BUILD_HASH=$OPENSSL_BUILD_HASH -DOPENSSL_INSTALL_MAN=ON -DOPENSSL_ENABLE_TESTS=ON
        - chmod -R 777 .                                              # jdoe must be able to write to build directory
        - su -l jdoe -c "cd `pwd` && make"                            # build and test as unprivileged
        - DESTDIR=. make install
        - ../scripts/upload_result.sh x86_64-linux usr
    stage: build

windows-x86:
    image: viaduck/ci:mingw
    script:
        - mkdir build-windows-x86
        - cd build-windows-x86
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BUILD_VERSION=$OPENSSL_BUILD_VERSION -DOPENSSL_BUILD_HASH=$OPENSSL_BUILD_HASH -DOPENSSL_INSTALL_MAN=ON -DCROSS=ON -DCROSS_PREFIX=i686-w64-mingw32- -DCROSS_TARGET=mingw
        - make
        - DESTDIR=. make install
        - ../scripts/upload_result.sh i686-w64-mingw32 usr
    stage: build

windows-x86_64:
    image: viaduck/ci:mingw
    script:
        - mkdir build-windows-x86_64
        - cd build-windows-x86_64
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BUILD_VERSION=$OPENSSL_BUILD_VERSION -DOPENSSL_BUILD_HASH=$OPENSSL_BUILD_HASH -DOPENSSL_INSTALL_MAN=ON -DCROSS=ON -DCROSS_PREFIX=x86_64-w64-mingw32- -DCROSS_TARGET=mingw64
        - make
        - DESTDIR=. make install
        - ../scripts/upload_result.sh x86_64-w64-mingw32 usr
    stage: build

android-arm64-v8a:
    image: viaduck/ci:android
    script:
        - mkdir build-android-arm64-v8a
        - cd build-android-arm64-v8a
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BUILD_VERSION=$OPENSSL_BUILD_VERSION -DOPENSSL_BUILD_HASH=$OPENSSL_BUILD_HASH -DCROSS_ANDROID=ON -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=arm64-v8a -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake
        - make
        - DESTDIR=. make install
        - ../scripts/upload_result.sh arm64-v8a-android usr
    stage: build
        
android-armeabi-v7a:
    image: viaduck/ci:android
    script:
        - mkdir build-android-armeabi-v7a
        - cd build-android-armeabi-v7a
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BUILD_VERSION=$OPENSSL_BUILD_VERSION -DOPENSSL_BUILD_HASH=$OPENSSL_BUILD_HASH -DCROSS_ANDROID=ON -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=armeabi-v7a -DANDROID_ARM_MODE=arm -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake
        - make
        - DESTDIR=. make install
        - ../scripts/upload_result.sh armeabi-v7a-android usr
    stage: build
        
android-x86_64:
    image: viaduck/ci:android
    script:
        - mkdir build-android-x86_64
        - cd build-android-x86_64
        - cmake ../ -DBUILD_OPENSSL=ON -DOPENSSL_BUILD_VERSION=$OPENSSL_BUILD_VERSION -DOPENSSL_BUILD_HASH=$OPENSSL_BUILD_HASH -DCROSS_ANDROID=ON -DANDROID_PLATFORM=$ANDROID_PLATFORM -DANDROID_ABI=x86_64 -DANDROID_TOOLCHAIN=clang -DANDROID_NDK=$ANDROID_NDK -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake
        - make
        - DESTDIR=. make install
        - ../scripts/upload_result.sh x86_64-android usr
    stage: build
